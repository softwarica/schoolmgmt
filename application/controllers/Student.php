<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Student extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Student_model');
    } 

    /*
     * Listing of tblstudent
     */
    function index()
    {
        $data['tblstudent'] = $this->Student_model->get_all_tblstudent();
        
        $data['_view'] = 'student/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tblstudent
     */
    function add()
    {   
        $this->load->library('form_validation');

	
		$this->form_validation->set_rules('full_name','Full Name','required|max_length[50]');
		$this->form_validation->set_rules('address','Address','required|max_length[50]');
		$this->form_validation->set_rules('contact','Contact','required|max_length[50]');
		$this->form_validation->set_rules('email','Email','required|max_length[60]|valid_email');
		$this->form_validation->set_rules('pword','Pword','required|max_length[60]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'student_id' => $this->Student_model->isIdAvailable(),
				'full_name' => $this->input->post('full_name'),
				'address' => $this->input->post('address'),
				'contact' => $this->input->post('contact'),
				'email' => $this->input->post('email'),
				'pword' => $this->input->post('pword'),
            );
            
            $tblstudent_id = $this->Student_model->add_tblstudent($params);
            redirect('student/index');
        }
        else
        {            
            $data['_view'] = 'student/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tblstudent
     */
    function edit($student_id)
    {   
        // check if the tblstudent exists before trying to edit it
        $data['tblstudent'] = $this->Student_model->get_tblstudent($student_id);
        
        if(isset($data['tblstudent']['student_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('id','ID','required|integer');
			$this->form_validation->set_rules('full_name','Full Name','required|max_length[50]');
			$this->form_validation->set_rules('address','Address','required|max_length[50]');
			$this->form_validation->set_rules('contact','Contact','required|max_length[50]');
			$this->form_validation->set_rules('email','Email','required|max_length[60]|valid_email');
			$this->form_validation->set_rules('pword','Pword','required|max_length[60]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id' => $this->input->post('id'),
					'full_name' => $this->input->post('full_name'),
					'address' => $this->input->post('address'),
					'contact' => $this->input->post('contact'),
					'email' => $this->input->post('email'),
					'pword' => $this->input->post('pword'),
                );

                $this->Student_model->update_tblstudent($student_id,$params);            
                redirect('student/index');
            }
            else
            {
                $data['_view'] = 'student/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tblstudent you are trying to edit does not exist.');
    } 

    /*
     * Deleting tblstudent
     */
    function remove($student_id)
    {
        $tblstudent = $this->Student_model->get_tblstudent($student_id);

        // check if the tblstudent exists before trying to delete it
        if(isset($tblstudent['student_id']))
        {
            $this->Student_model->delete_tblstudent($student_id);
            redirect('student/index');
        }
        else
            show_error('The tblstudent you are trying to delete does not exist.');
    }
    
}
